{"name":"Wp-heartbeat-notify","tagline":"Based on WordPress 3.6 heartbeat API, Wp Hearbeat Notify, display a realtime custom message to your visitor each time a new post is published with a link redirecting to it. Still in beta version, this plugin has been full tested only on WordPress 3.6-beta3.","body":"Based on **WordPress 3.6 heartbeat API**, Wp Heartbeat Notify, display a realtime custom message to your visitor each time a new post is published with a link redirecting to it. Still in beta version, this plugin has been **full tested only on WordPress 3.6-beta3**.\r\n\r\n![wp-heartbeat-notify screenshot](https://github.com/micc83/wp-heartbeat-notify/raw/master/wp-heartbeat-notify/screenshot-1.jpg)\r\n\r\n## Install\r\n\r\nJust upload `wp-heartbeat-notify` to your WordPress `wp-content/plugin/` folder. Go to *Plugins->Installed plugins* WordPress menu and activate it. That's it... You just have to write a new article to see it in action (Clearly, the notification will not be displayed to the user who created the event. So, for the purposes of testing, I suggest you open another browser where you're not logged in).\r\n\r\n## Purpose\r\n\r\nThis is probably the first, or at least one of the first WordPress plugin that makes use of the Heartbeat API. Its purpose is almost purely didactic and I hope that the solution that I have implemented it can be useful for developing new ideas.\r\n\r\nThe plugin, however, is fully functional and can increase the functionality with a few lines of code, as described below.\r\n\r\n## Under the hood\r\n\r\nThe functioning of the plugin is quite simple.\r\n\r\n* All scripts and styles necessary for the functioning of heartbeat are queued\r\n* To generate a notification you hook onto an action or a filter of WordPress and you create a transient that match the length of the heartbeat rate\r\n* wp-heartbeat-notify, every few seconds, check the presence of transient and output the content as a notification\r\n\r\nEasy... Isn't it?\r\n\r\n## Add new notice\r\n\r\nTo add a new notice, as stated before, you just have to hook into an action or filter and run `Wp_Heartbeat_Notify::notify( $args )` as in the following example:\r\n\r\n### Add a notice on registered users comments \r\n\r\n```php\r\n\r\n// Let's hook into Comment publication\r\nadd_filter ( 'comment_post', 'notify_new_comment' );\r\nfunction notify_new_comment( $comment_id ) {\r\n  \r\n  // Retrieve the comment\r\n  $comment = get_comment( $comment_id );\r\n\r\n  // Check if the user is registered\r\n  if ( ! $comment->user_id > 0 )\r\n\t\treturn;\r\n  \r\n  // Get the comment link\r\n  $comment_link = get_comment_link( $comment_id ); \r\n\r\n  // Here's the magic\r\n\tWp_Heartbeat_Notify::notify( array(\r\n\t\t'title'\t\t=>\t\t'New Comment by ' . $comment->comment_author,\r\n\t\t'content'\t=>\t \t'There\\'s a new comment, why don\\'t you <a href=\"' . $comment_link . '\">give it</a> a look?',\r\n\t\t'type'\t\t=>\t\t'info'\r\n\t) );\r\n\t\r\n}\r\n```\r\n\r\n## Support and contacts\r\n\r\nIf you need support you can find me on [twitter](https://twitter.com/Micc1983) or comment on the dedicated page on my [website](http://codeb.it/).\r\n","google":"UA-34218175-1","note":"Don't delete this file! It's used internally to help with page regeneration."}